package access;

// 접근 제어자 정리
/*
 * 1. public	: 모든 접근 허용, 패키지 넘어 모두 허용
 * 2. default	: 기본 제어자, 클래스 내부와 같은 패키지에서 접근 가능
 * 3. protected	: 상속 받은 클랫 또는 같은 패키지에서 접근 가능
 * 4. private	: 클래스 외부에서 접근 불가, 같은 클래스에서 가능
 * 
 * 객체지향 프로그래밍의 특징 (p189-190)
 * 
 * 1. 캡슐화
 *  객체의 필드, 메소드를 하나로 묶고 실제 구현 내용을 감추는 것.
 *  외부 객체는 객체 내부의 구조를 알지 못하며 객체가 노출해서 제공하는 필드와 메소드만 사용 가능.
 * 
 * 2. 상속
 *  상위 객체의 필드와 메소드를 하위 객체에게 물려주어 하위 객체가 사용 할 수 있도록 하는 기술.
 *	자바의 최상위 클래스는 Object 입니다.
 *
 * 3. 다형성
 * 	같은 타입이지만 실행 결과가 다양한 객체를 이용할 수 있는 성질.
 * 	자바는 다형성을 위해 부모 클래스 또는 인터페이스의 타입 변환을 허용.
 * 	부모 타입에는 모든 자식 객체가 대입될 수 있고, 인터페이스 타입에는 모든 구현 객체가 대입 가능.
 * 
 * */

public class AccessModifier {

}
